- git init: Ініціалізує новий Git репозиторій.
- git clone [url]: Клонує репозиторій з URL.
- git add [file]: Додає файл до індексу (стадії).
- git commit -m "[commit message]": Створює коміт з поточними змінами.
- git status: Показує статус файлів у робочій директорії та індексі.
- git push [remote] [branch]: Відправляє зміни до вказаного віддаленого репозиторію.
- git pull [remote] [branch]: Завантажує зміни з віддаленого репозиторію та автоматично об'єднує їх з поточною гілкою.
- git branch: Перелічує, створює або видаляє гілки.
- git checkout [branch-name]: Перемикається на вказану гілку.
- git merge [branch]: Об'єднує вказану гілку з поточною гілкою.
- git rebase [branch]: Перебазує поточну гілку на вершину вказаної гілки.
- git fetch [remote]: Завантажує історію з віддаленого репозиторію, але не об'єднує зміни.
- git log: Показує історію комітів.
- git diff: Показує різницю між файлами або комітами.
- git reset: Скидає поточний HEAD до вказаного стану.
- git rm [file]: Видаляє файл з робочої директорії та індексу.
- git stash: Тимчасово прибирає змінені трековані файли, очищуючи робочу директорію.

### **Розширені команди Git**

- git bisect: Використовується для знаходження коміту, який ввів помилку, за допомогою бінарного пошуку.
- git tag: Використовується для маркування певних комітів як важливі, зазвичай для маркування версій релізів.
- git cherry-pick: Дозволяє застосувати зміни, внесені в одному коміті, на іншу гілку.
- git revert: Створює новий коміт, який відміняє зміни, внесені попереднім комітом, не видаляючи історію.
- git worktree: Дозволяє працювати з кількома копіями робочого дерева одного репозиторію.